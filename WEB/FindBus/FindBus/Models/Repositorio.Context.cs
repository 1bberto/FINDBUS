//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FindBus.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class FindBusEntities : DbContext
    {
        public FindBusEntities()
            : base("name=FindBusEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tblAplicativo> tblAplicativo { get; set; }
        public DbSet<tblBairro> tblBairro { get; set; }
        public DbSet<tblBairroRua> tblBairroRua { get; set; }
        public DbSet<tblBase> tblBase { get; set; }
        public DbSet<tblCidade> tblCidade { get; set; }
        public DbSet<tblCidadeBairro> tblCidadeBairro { get; set; }
        public DbSet<tblItinerario> tblItinerario { get; set; }
        public DbSet<tblLogin> tblLogin { get; set; }
        public DbSet<tblPonto> tblPonto { get; set; }
        public DbSet<tblRota> tblRota { get; set; }
        public DbSet<tblRotaPonto> tblRotaPonto { get; set; }
        public DbSet<tblRua> tblRua { get; set; }
        public DbSet<tblRuaPonto> tblRuaPonto { get; set; }
        public DbSet<tblUsuario> tblUsuario { get; set; }
        public DbSet<tblVersao> tblVersao { get; set; }
    
        public virtual int USP_INS_PONTO(string rua, string cidade, string uF, string bairro, string rota, string latitude, string longitude, Nullable<bool> pontoParada)
        {
            var ruaParameter = rua != null ?
                new ObjectParameter("Rua", rua) :
                new ObjectParameter("Rua", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("Cidade", cidade) :
                new ObjectParameter("Cidade", typeof(string));
    
            var uFParameter = uF != null ?
                new ObjectParameter("UF", uF) :
                new ObjectParameter("UF", typeof(string));
    
            var bairroParameter = bairro != null ?
                new ObjectParameter("Bairro", bairro) :
                new ObjectParameter("Bairro", typeof(string));
    
            var rotaParameter = rota != null ?
                new ObjectParameter("Rota", rota) :
                new ObjectParameter("Rota", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var pontoParadaParameter = pontoParada.HasValue ?
                new ObjectParameter("PontoParada", pontoParada) :
                new ObjectParameter("PontoParada", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_INS_PONTO", ruaParameter, cidadeParameter, uFParameter, bairroParameter, rotaParameter, latitudeParameter, longitudeParameter, pontoParadaParameter);
        }
    
        public virtual ObjectResult<USP_SEL_Itinerario_Result> USP_SEL_Itinerario(Nullable<int> codigoRota)
        {
            var codigoRotaParameter = codigoRota.HasValue ?
                new ObjectParameter("CodigoRota", codigoRota) :
                new ObjectParameter("CodigoRota", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_SEL_Itinerario_Result>("USP_SEL_Itinerario", codigoRotaParameter);
        }
    }
}
